% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selection_model.R
\name{selection_model}
\alias{selection_model}
\title{Estimate step or beta selection model}
\usage{
selection_model(
  data,
  yi,
  sei,
  pi,
  ai,
  cluster,
  selection_type = c("step", "beta"),
  steps = if (selection_type == "step") 0.025 else c(0.025, 0.975),
  mean_mods = NULL,
  var_mods = NULL,
  sel_mods = NULL,
  sel_zero_mods = NULL,
  subset = NULL,
  make_sandwich = TRUE,
  conf_level = 0.95,
  estimator = c("ML", "hybrid", "hybrid-full"),
  theta = NULL,
  optimizer = NULL,
  optimizer_control = list(),
  use_jac = TRUE,
  bootstrap = "none",
  boot_CI = "percentile",
  R = 1999,
  ...
)
}
\arguments{
\item{data}{a data frame or tibble containing the meta-analytic data}

\item{yi}{vector of effect sizes}

\item{sei}{vector of sampling standard error}

\item{pi}{vector of one-sided p-values}

\item{ai}{vector of analytic weight}

\item{cluster}{vector indicating cluster membership}

\item{selection_type}{character string specifying the type selection model to estimate, with possible options \code{"step"} or \code{"beta"}.}

\item{steps}{numeric vector of one or more values specifying the thresholds of p-values where the likelihood of effects being selected changes}

\item{mean_mods}{optional model formula indicating moderators related to the average effect size magnitude}

\item{var_mods}{optional model formula indicating moderators related to effect size heterogeneity}

\item{sel_mods}{optional model formula indicating moderators related to the probability of selection}

\item{sel_zero_mods}{optional model formula indicating moderators related to the probability of selection}

\item{subset}{optional logical expression indicating the subset of the data to keep in the analysis}

\item{make_sandwich}{logical with \code{TRUE} (the default) indicating to calculate standard errors using sandwich estimators}

\item{conf_level}{desired coverage level for confidence intervals, with the default value set to \code{.95}}

\item{estimator}{vector indicating whether to use the maximum likelihood or the hybrid estimator, with possible options \code{"ML"}, \code{"hybrid"}, and \code{"hybrid-full"}. If running the beta selection model, only the maximum likelihood estimator, \code{"ML"}, is available. For step function models, both maximum likelihood and hybrid estimators are available.}

\item{theta}{optional numeric vector of containing starting values of the parameters to be estimated}

\item{optimizer}{character string indicating the optimizer to use}

\item{optimizer_control}{an optional list of control parameters to be used for optimization}

\item{use_jac}{logical with \code{TRUE} (the default) indicating that the Jacobian ...???}

\item{bootstrap}{character string specifying the type of bootstrap to run, with possible options \code{"none"} (the default), \code{"exponential"}, \code{"multinomial"}.}

\item{boot_CI}{character string specifying the type of bootstrap confidence interval to calculate, with possible options \code{"percentile"} (the default), \code{"student"}, \code{"large-sample"}, or \code{"none"}.}

\item{R}{number of bootstrap replications, with the default set to \code{1999}}

\item{...}{further arguments passed to \code{simhelpers::bootstrap_CIs}.}
}
\value{
A numeric vector.
}
\description{
Estimate step or beta selection model
}
\examples{

dat <- r_meta(
  mean_smd = 0, 
  tau = .1, omega = .01,
  m = 50, 
  cor_mu = .4, cor_sd = 0.001, 
  censor_fun = step_fun(cut_vals = .025, weights = 0.4), 
  n_ES_sim = n_ES_param(40, 3)
)

res <- selection_model(
  data = dat,
  yi = d,
  sei = sd_d,
  cluster = studyid,
  steps = 0.025,
  estimator = "ML",
  bootstrap = "multinomial",
  boot_CI = "percentile",
  R = 49
)

res$est
}
